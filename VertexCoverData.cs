using System.Collections.Generic;
using System.Linq;
using System.Numerics;

namespace CodeCombatGridmancer
{
	/// <summary>
	/// This stores the data of a vertex cover iteration
	/// generated by the <see cref="VertexCover"/> class.
	/// </summary>
	internal class VertexCoverData
	{
		public int Size { get; private set; }
		private readonly List<int> _nodes = new List<int>();

		public int this[int i]
		{
			get
			{
				return _nodes[i];
			}
		}

		public VertexCoverData(int s, IEnumerable<int> data)
		{
			_nodes.AddRange(data);
			Size = _nodes.Count;
		}

		public int[] ToArray()
		{
			return _nodes.ToArray();
		}

		private BigInteger _hash = new BigInteger(-1);
		public BigInteger BigHash
		{
			get
			{
				if (_hash != -1)
				{
					return _hash;
				}
				int max = 
					_nodes
					.Select(node => node.ToString().Length)
					.Concat(new[] {0}).Max();

				BigInteger mult = 1;
				for (int i = 0; i < max; i++)
				{
					mult *= 10;
				}

				BigInteger res = 0;
				foreach (int node in _nodes)
				{
					res *= mult;
					res += node;
				}
				_hash = res;
				return _hash;
			}
		}
	}
}